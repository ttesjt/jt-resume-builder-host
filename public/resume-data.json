{
  "name": "JT Tao",
  "title": "Full Stack Developer",
  "contact": {
    "email": "ttyy550@gmail.com",
    "phone": "(408) 231-5832",
    "location": "San Jose, CA",
    "github": "github.com",
    "website": "google.com"
  },
  "skills": [
    {
      "category": "Programming & Frameworks",
      "items": [
        "JavaScript",
        "TypeScript",
        "Python",
        "Flutter",
        "React.js",
        "Node.js",
        "C, C++, C#",
        "Unity Engine"
      ]
    },
    {
      "category": "Backend & Databases",
      "items": [
        "Express.js",
        "SQL",
        "NoSQL",
        "Vector Databases",
        "RESTful APIs"
      ]
    },
    {
      "category": "Cloud, DevOps & Tools",
      "items": [
        "GCS Cloud Run and App Engine",
        "AWS Lambda and S3",
        "Firebase",
        "Docker",
        "CI/CD",
        "Version Control"
      ]
    }
  ],
  "summary": {
    "title": "Summary",
    "description": "Full Stack Developer with expertise in React, Flutter, and backend architecture on Google Cloud and AWS. Skilled in creating scalable web and mobile applications with a strong focus on UI/UX and optimal user engagement. Proficient in rapid prototyping, game development workflows, and prompt engineering for LLM-based solutions.",
    "sub-sections": []
  },
  "experience": {
    "title": "Experience",
    "description": "",
    "sub-sections": [
      {
        "title": "Let’s Be Critic",
        "subtitle": "A complaint and advisory chatbot",
        "description": "Solo Full-Stack Developer",
        "date": "",
        "details": [
          "Developed an LLM-driven search trigger to analyze user input and historical data prior to vector queries, reducing unnecessary searches by 70% with minimal overhead.",
          "Architected a Firestore-based tracking and scheduling system that automates keypoint storage in a vector store, enabling Cloud Run deployment and eliminating the need for a dedicated server.",
          "Created an asynchronous dual-LLM workflow, separating chat handling from keypoint summarization and storage, reducing token usage by up to 80% thanks to a shorter required context."
        ]
      },
      {
        "title": "Cardio Traveler",
        "subtitle": "A mobile fitness serious game",
        "description": "Lead Programmer, Designer, and Artist (Team of 3)",
        "date": "2008 - 3893",
        "details": [
          "Transitioned from a Unity-only prototype to a Flutter + Unity workflow, boosting performance and reducing battery usage by over five times (confirmed by a 20-player playtest).",
          "Implemented a modular JSON-based localization system supporting four languages, ensuring a scalable approach to item localization.",
          "Designed a top-view vegetation system using fewer than 35 vertices per tree, achieving 30 FPS with more than 30,000 trees on an iPhone XR—triple the capacity of standard approaches."
        ]
      },
      {
        "title": "Hello World",
        "subtitle": "A gamified location recommendation app powered by LLMs",
        "description": "Programmer, Designer, and Artist (Team of 3)",
        "date": "",
        "details": [
          "Engineered LLM prompts to generate daily Togo Quests and deployed a Node.js backend on Google Cloud Run, ensuring secure and scalable LLM request processing.",
          "Architected and collaboratively optimized Google Maps API usage in the Togo Quest system, cutting calls by nearly 100% through SQLite-based location caching and efficient distance checks."
        ]
      },
      {
        "title": "DrawAll",
        "subtitle": "A drawing-based social media",
        "description": "Solo Full-Stack Developer",
        "date": "",
        "details": [
          "Engineered a 256×256 tile-based, coordinate-query lazy-loading mechanism using Firestore and Google Cloud Storage, allowing partial image updates per stroke and cutting average board load times by up to 300%, while enabling infinite board length.",
          "Developed a ‘fence system’ to protect specific board coordinates by defining max fence lengths and section-based partitioning, limiting reads to at most 2 Firestore documents per interaction.",
          "Built a modular layering system and unified template for all on-board media and content, cutting roughly 5,000 lines of code and ensuring a more scalable, maintainable architecture."
        ]
      },
      {
        "title": "Hero’s Clock",
        "subtitle": "A light-weight cross-platform productivity app",
        "description": "Solo Flutter Developer",
        "date": "",
        "details": [
          "Introduced a page-view UI and a 'cached last page' mechanic, cutting user interaction steps from three to one for single-task-timer features.",
          "Crafted a responsive UI and app-flow for both mobile and web, employing a screen utility system to maintain consistent layouts across various devices."
        ]
      }
    ]
  },
  "education": {
    "title": "Education & Academic Experience",
    "description": "",
    "sub-sections": [
      {
        "title": "University of California, Santa Cruz",
        "description": "Computational Media MS in Game & Playable Media (Candidate)",
        "date": "September 2023 - March 2025"
      },
      {
        "title": "University of California, Santa Cruz",
        "description": "Bachelor of Science in Computer Science (Frontend Development Focus)",
        "date": "September 2020 - June 2022"
      }
    ]
  }
}