{
  "summaries": [
    "Full Stack Developer with expertise in React, Flutter, and backend architecture on Google Cloud and AWS. Skilled in building scalable web and mobile applications with a strong focus on UI/UX, and seamless front-end and back-end integration for a smooth user experience.",
    "Full Stack Developer specializing in backend architecture and LLM applications. Built RESTful APIs with AWS Lambda and GCS Cloud Run. Designed prompts to optimize LLMs for chatbots and utility processors. Experienced in React and Flutter for seamless frontend integration.",
    "Game Developer with expertise in Unity 2D/3D, Blender modeling, and multi-engine development. Specializes in gamified UI/UX design, fast prototyping, and scalable architecture. Experienced in mobile game development and integrating game engines with traditional mobile app frameworks.",
    "Game Developer specializing in technical design, scalable architecture, and multi-engine development. Experienced in Unity 2D/3D, Blender modeling, and building structured, maintainable game systems. Skilled in fast prototyping and designing frameworks that support long-term scalability and adaptability."
  ],
  "titleOptions": [
    "Full Stack Developer",
    "Software Engineer",
    "Cloud Computing Engineer",
    "UI & UX Designer",
    "Language Model Engineer",
    "Game Developer",
    "Flutter Developer",
    "Artist"
  ],
  "skills": [
    {
      "category": "Programming Languages",
      "items": [
        "JavaScript",
        "TypeScript",
        "Python",
        "C & C++",
        "C#",
        "Dart",
        "SQL"
      ]
    },
    {
      "category": "Frameworks & Libraries",
      "items": [
        "Flutter",
        "React.js",
        "Unity",
        "Node.js",
        "Express",
        "Unity Engine"
      ]
    },
    {
      "category": "Cloud & DevOps",
      "items": [
        "Google Cloud (Cloud Run, App Engine)",
        "AWS (Lambda, S3)",
        "Firebase",
        "Docker",
        "CI/CD (e.g., GitHub Actions, Jenkins)"
      ]
    },
    {
      "category": "Databases & Data Management",
      "items": [
        "Firestore",
        "SQL (MySQL, PostgreSQL)",
        "NoSQL (MongoDB)",
        "Vector Databases",
        "Cloud Storage (e.g., AWS S3, GCS)"
      ]
    },
    {
      "category": "LLM & AI",
      "items": [
        "Prompt Engineering",
        "Restful API Creation",
        "Response Post-processing",
        "Vector Store",
        "Fine-tuning",
        "ML Model Integration"
      ]
    },
    {
      "category": "UI/UX & Design Tools",
      "items": [
        "Adobe Illustrator",
        "Figma",
        "Paper & Digital Drawing",
        "Blender (3D Modeling)",
        "Shader Development"
      ]
    },
    {
      "category": "Game Development & Prototyping",
      "items": [
        "Unity (2D & 3D)",
        "Blender",
        "Unreal",
        "Godot",
        "C, C++, and C#",
        "Asset Optimization",
        "Rapid Prototyping",
        "Shader Graph / Custom Shaders"
      ]
    },
    {
      "category": "General & Tools",
      "items": [
        "Git",
        "Linux CLI",
        "Agile / Scrum",
        "Testing & Debugging",
        "REST & GraphQL APIs"
      ]
    }
  ],
  "experiences": [
    {
      "title": "Let’s Be Critic",
      "subtitle": "A complaint and advisory chatbot",
      "description": "Solo Full-Stack Developer",
      "date": "",
      "details": [
        "Implemented an LLM-powered search trigger that analyzes user input and past results prior to vector queries, cutting unnecessary searches by 70% with no performance loss",
        "Designed a Firestore-based tracking and scheduler system that automates conversation-keypoints storage to the vector store, enabling Cloud Run for the chatbot, which previously required a server to handle chat sessions",
        "Developed an asynchronous dual-LLM workflow for the 'complaint' chat system. One channel handles the chat, one channel handles the keypoints summarization and storage. This approach reduced token usage up to 80% because of shorter context to LLM required",
        "Created an automated review generator fueled by user complaint logs, enhancing user engagement",
        "Refined prompt engineering and response handling to enable seamless topic-product switching in a single chat session, improving UX"
      ]
    },
    {
      "title": "Hero’s Clock",
      "subtitle": "A light-weight cross-platform productivity app",
      "description": "Solo Flutter Developer",
      "date": "",
      "details": [
        "Designed and implemented this app's workflow and visual, created 7 image assets, and developed 2 different save methods for tasks: shared_preference for caching current tasks, and SQLite for saving favorite tasks. Ran 2 user tests which resulted in one major UI revision that split features into 3 screens",
        "Designed UI and app-flow with consideration for both mobile and web environments, and developed a screen utility system to ensure the UI looks consistent and natural on different screen sizes",
        "Implemented a page-view UI for features and a 'cached last page' mechanic, reducing UI interaction steps from 3 to 1 for single-task-timer features"
      ]
    },
    {
      "title": "Cardio Traveler",
      "subtitle": "A mobile fitness serious game",
      "description": "Lead Programmer, Designer, and Artist (Team of 3)",
      "date": "",
      "details": [
        "Designed and implemented 8 out of 12 Flutter app screens. Solely developed and integrated the entire 3D world scenes in Unity, including a scene management system with 4 main game scenes (2 currently in demo).",
        "Migrated the initial Unity-only prototype to a Flutter + Unity workflow, improving performance and cutting battery usage by over 5 times (based on a playtest over 20 players)",
        "Developed a scalable localization system with Modular JSON Loading, supporting 4 languages, and ensured a scalable item localization structure.",
        "Engineered a top-view vegetation system using <35 vertices per tree, enabling 30 FPS rendering of over 30k trees on iPhone XR—3x more than traditional methods",
        "Created 50+ vector art assets and a UI theme for 8 in-game cities, along with 30+ 3D models for buildings, trees, and environments"
      ]
    },
    {
      "title": "Hello World",
      "subtitle": "A 'Togo list' mobile app powered by LLMs",
      "description": "Programmer, Designer, and Artist (Team of 3)",
      "date": "",
      "details": [
        "Designed and co-implemented a 'togo quest' system that reduced Google Maps API usage by 50% to nearly 100% through searched-location caching with SQLite and distance checks",
        "Led UI and app-flow logic for 5 main features and 8 screens, ensuring a cohesive user experience",
        "Built a Node.js backend on Google Cloud Run to handle LLM requests, ensuring secure and scalable LLM interactions"
      ]
    },
    {
      "title": "DrawAll",
      "subtitle": "A graffiti-wall inspired drawing-board social media",
      "description": "Solo Developer",
      "date": "",
      "details": [
        "Developed a grid-based, coordinate-query lazy-load mechanic leveraging Firestore and Google Cloud Storage that reduced average board loading time by 3 times and enabled infinite-length drawing boards",
        "Developed a layering system and a uniformed template for all 'on-board' media and content objects and placement. Successfully cutting ~5,000 lines of code and ensured a scalable and maintainable system compared to the initial implementation",
        "Architected end-to-end data flow using Firestore and Google Cloud Storage for posts, media cards, board configs, and more",
        "Implemented a complete workflow—from user accounts and lobby/board search to collaborative drawing and sharing experience"
      ]
    },
    {
      "title": "Kwjibo",
      "subtitle": "A desktop rogue-like game featuring unique joystick gestural combat",
      "description": "Technical Designer & Programmer (Team of 5)",
      "date": "",
      "details": [
        "Developed a joystick gesture detection system supporting sequential inputs via an 8-direction checkpoint and state-machine architecture",
        "Created a timeline event system to replace hardcoded conditions, now serving as the core engine for in-game events and combat logic"
      ]
    },
    {
      "title": "Multiversal Lover",
      "subtitle": "One of the earliest ChatGpt powered dating chatbots",
      "description": "Lead Full-Stack Developer (Team of 3)",
      "date": "",
      "details": [
        "Used prompt engineering to split single LLM responses into multiple shorter messages, simulating natural real-time chat",
        "Added a browser-based inactivity timer that triggers system requests, enabling the LLM to initiate conversation prompts",
        "Set up AWS Lambda for LLM processing and AWS S3 for conversation storage, ensuring scalable, reliable performance"
      ]
    }
  ]
}